1-) ViewBinding

Em build.gradle(:app), adicionar

    buildFeatures{
        viewBinding true
    }

após kotlinOptions. Sync se precisar


-------------------------------------------------------------------------------------------------------------------------------------------------------
1-)
activity_main, colcoar o id do TextView como tvHello


MainActivity


    private lateinit var binding: ActivityMainBinding

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        binding = ActivityMainBinding.inflate(layoutInflater)
        setContentView(binding.root)

        binding.apply {
            tvHello.text = "Hello Android"
        }
    }


-------------------------------------------------------------------------------------------------------------------------------------------------------
2-) RecyclerView simples

Adicionar em build.gradle(:app)

    buildFeatures{
        viewBinding true
    }

após kotlinOptions. Sync se precisar

e (números podem variar)

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}



------------------------------------------------------------------------------------------------------------------------------------------------------
2-) 

Criar um novo LayoutResource com o nome "item_row"

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:background="#B3E5FC"
    android:layout_margin="5dp"
    android:padding="5dp">

    <TextView
        android:id="@+id/tvId"
        android:text="Id"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <TextView
        android:id="@+id/tvName"
        android:text="Name"
        android:layout_marginTop="5dp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/tvId" />
</androidx.constraintlayout.widget.ConstraintLayout>



activity_main

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

<androidx.recyclerview.widget.RecyclerView
    android:id="@+id/rvMain"
    android:layout_height="match_parent"
    android:layout_width="match_parent"
    app:layout_constraintTop_toTopOf="parent"
    app:layout_constraintStart_toStartOf="parent"/>

</androidx.constraintlayout.widget.ConstraintLayout>



-------------------------------------------------------------------------------------------------------------------------------------------------------
2-) 

Criar uma classe Kotlin do tipo data e chamar de SampleModel


data class SampleModel(val id:Int , val name: String)



Criar uma classe Kotlin com o nome SampleAdapter


import android.view.LayoutInflater
import android.view.ViewGroup
import androidx.recyclerview.widget.RecyclerView
import com.ezatpanah.recyclerview.databinding.ItemRowBinding

class SampleAdapter(val items: MutableList<SampleModel>): RecyclerView.Adapter<SampleAdapter.ViewHolder>() {

    private lateinit var binding: ItemRowBinding

    inner class ViewHolder(itemView: ItemRowBinding): RecyclerView.ViewHolder(itemView.root) {
        fun bind(item: SampleModel) {
            binding.apply {
                tvId.text = item.id.toString()
                tvName.text = item.name
            }
        }
    }

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): SampleAdapter.ViewHolder {
        val inflater = LayoutInflater.from(parent.context)
        binding = ItemRowBinding.inflate(inflater,parent, false)
        return ViewHolder(binding)
    }

    override fun onBindViewHolder(holder: SampleAdapter.ViewHolder, position: Int) {
        holder.bind(items[position])
    }

    override fun getItemCount() = items.size
}


-------------------------------------------------------------------------------------------------------------------------------------------------------
2-) 

MainActivity


import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import androidx.recyclerview.widget.LinearLayoutManager
import com.ezatpanah.recyclerview.databinding.ActivityMainBinding


    private lateinit var binding: ActivityMainBinding

    private var nameList: MutableList<SampleModel> = mutableListOf()
    private lateinit var sampleAdapter: SampleAdapter

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        
        binding = ActivityMainBinding.inflate(layoutInflater)
        setContentView(binding.root)
        
        loadData()
        
        sampleAdapter = SampleAdapter(nameList)
        binding.apply {
            rvMain.apply {
                layoutManager = LinearLayoutManager(this@MainActivity)
                adapter = sampleAdapter
            }
        }
    }

    fun loadData() {
        nameList.add(SampleModel(1,"Sample Title"))
        nameList.add(SampleModel(2,"Sample 1"))
        nameList.add(SampleModel(3,"Sample 2"))
        nameList.add(SampleModel(4,"Sample 3"))
        nameList.add(SampleModel(5,"Sample 4"))
        nameList.add(SampleModel(6,"Sample 5"))
    }







-------------------------------------------------------------------------------------------------------------------------------------------------------
3-) Nested RecyclerView


Adicionar em build.gradle(:app)

    buildFeatures{
        viewBinding true
    }

após kotlinOptions. Sync se precisar

e (números podem variar)

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    implementation "io.coil-kt:coil:2.1.0"
}


Adicionar em AndroidManifest

    <uses-permission android:name="android.permission.INTERNET"/>



Criar os packages "model", "utils" e "adapter".

-------------------------------------------------------------------------------------------------------------------------------------------------------
3-) 

Criar as classes abaixo, nos respectivos pacotes

model/MovieModel

data class MovieModel(val imageUrl: String)


model/MainModel

data class MainModel(val title: String, val movieModels: List<MovieModel>)


utils/Images

object Images {
    const val POSTER_BASE_URL = "https://image.tmdb.org/t/p/w342/"

    const val imageUrl0 = POSTER_BASE_URL + "kjFDIlUCJkcpFxYKtE6OsGcAfQQ.jpg"
    const val imageUrl1 = POSTER_BASE_URL + "bQXAqRx2Fgc46uCVWgoPz5L5Dtr.jpg"
    const val imageUrl2 = POSTER_BASE_URL + "pGx6O6IwqADOsgmqWzPysmWnOyr.jpg"
    const val imageUrl3 = POSTER_BASE_URL + "aGBuiirBIQ7o64FmJxO53eYDuro.jpg"
    const val imageUrl4 = POSTER_BASE_URL + "pTxw4GFE3ZfzJfvuUsPyD5njAuI.jpg"
    const val imageUrl5 = POSTER_BASE_URL + "spCAxD99U1A6jsiePFoqdEcY0dG.jpg"
    const val imageUrl6 = POSTER_BASE_URL + "7ze7YNmUaX81ufctGqt0AgHxRtL.jpg"
    const val imageUrl7 = POSTER_BASE_URL + "gb6rq2nD0jRrN0dCzigg2MxXNsB.jpg"
    const val imageUrl8 = POSTER_BASE_URL + "pHkKbIRoCe7zIFvqan9LFSaQAde.jpg"
    const val imageUrl9 = POSTER_BASE_URL + "rFljUdOozFEv6HDHIFpFvcYW0ec.jpg"
}


utils/SambpleData

import SEUPACKAGE.model.MainModel
import SEUPACKAGE.model.MovieModel

object SampleData {
    private val movieModel= listOf(
        MovieModel(Images.imageUrl0),
        MovieModel(Images.imageUrl1),
        MovieModel(Images.imageUrl2),
        MovieModel(Images.imageUrl3),
        MovieModel(Images.imageUrl4),
        MovieModel(Images.imageUrl5),
        MovieModel(Images.imageUrl6),
        MovieModel(Images.imageUrl7),
        MovieModel(Images.imageUrl8),
        MovieModel(Images.imageUrl9)
    )

    val collections = listOf(
        MainModel("All Movie" , movieModel),
        MainModel("Want to see" , movieModel.reversed()),
        MainModel("Popular Movie" , movieModel.shuffled()),
        MainModel("Top Rated Movie" , movieModel)
    )
}



Criar os LayoutResources 


movie_item

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <androidx.cardview.widget.CardView
        android:layout_width="120dp"
        android:layout_height="170dp"
        android:layout_margin="5dp"
        app:cardCornerRadius="5dp"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent">

        <ImageView
            android:id="@+id/imgMoviePoster"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_margin="8dp"
            android:scaleType="centerCrop"/>

    </androidx.cardview.widget.CardView>

</androidx.constraintlayout.widget.ConstraintLayout>


parent_item

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    xmlns:tools="http://schemas.android.com/tools">

    <TextView
        android:id="@+id/tvGenreMovie"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Title"
        android:layout_marginStart="10dp"
        android:layout_marginTop="8dp"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/rvMovieChild"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:orientation="horizontal"
        android:padding="8dp"
        tools:listitem ="@layout/movie_item"
        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
        app:layout_constraintTop_toBottomOf="@id/tvGenreMovie"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent" />

</androidx.constraintlayout.widget.ConstraintLayout>

-------------------------------------------------------------------------------------------------------------------------------------------------------
3-) 

activity_main

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

<androidx.recyclerview.widget.RecyclerView
    android:id="@+id/rvMain"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="8dp"
    app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
    app:layout_constraintTop_toTopOf="parent"
    app:layout_constraintStart_toStartOf="parent"
    tools:listitem="@layout/parent_item"/>


</androidx.constraintlayout.widget.ConstraintLayout>



-------------------------------------------------------------------------------------------------------------------------------------------------------
3-) 

Incluir as class abaixo


adapter/MainAdapter

import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.recyclerview.widget.RecyclerView
import SEUPACKAGE.R
import SEUPACKAGE.databinding.ParentItemBinding
import SEUPACKAGE.model.MainModel

class MainAdapter(private val collection: List<MainModel>): RecyclerView.Adapter<MainAdapter.CollectionViewHolder>() {

    inner class CollectionViewHolder(itemView: View): RecyclerView.ViewHolder(itemView) {
        val binding = ParentItemBinding.bind(itemView)
    }

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): CollectionViewHolder {
        val view = LayoutInflater.from(parent.context).inflate(R.layout.parent_item, parent, false)
        return CollectionViewHolder(view)
    }

    override fun onBindViewHolder(holder: CollectionViewHolder, position: Int) {
        holder.binding.apply {
            val collection = collection[position]
            tvGenreMovie.text = collection.title
            val movieAdapter = MovieAdapter(collection.movieModels)
            rvMovieChild.adapter = movieAdapter
        }
    }

    override fun getItemCount() = collection.size
}



adapter/MovieAdapter

import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.recyclerview.widget.RecyclerView
import coil.load
import SEUPACKAGE.R
import SEUPACKAGE.databiding.MovieItemBinding
import SEUPACKAGE.model.MovieModel

class MovieAdapter (private val movieModel: List<MovieModel>) : RecyclerView.Adapter<MovieAdapter.MovieViewHolder>(){

    inner class MovieViewHolder(itemView: View): RecyclerView.ViewHolder(itemView){
        val binding = MovieItemBinding.bind(itemView)
    }

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MovieViewHolder {
        val view = LayoutInflater.from(parent.context).inflate(R.layout.movie_item, parent, false)
        return MovieViewHolder(view)
    }

    override fun onBindViewHolder(holder: MovieViewHolder, position: Int) {
        holder.binding.apply {
            imgMoviePoster.load(movieModel[position].imageUrl)
        }
    }

    override fun getItemCount() = movieModel.size
}




-------------------------------------------------------------------------------------------------------------------------------------------------------
3-) 

MainActivity

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import SEUPACKAGE.adapter.MainAdapter
import SEUPACKAGE.databinding.ActivityMainBinding
import SEUPACKAGE.utils.SampleData

    private lateinit var binding: ActivityMainBinding

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        
        binding = ActivityMainBinding.inflate(layoutInflater)
        setContentView(binding.root)

        binding.apply {
            rvMain.adapter = MainAdapter(SampleData.collections)
        }

    }
